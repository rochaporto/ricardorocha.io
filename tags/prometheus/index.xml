<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>prometheus on Ricardo Rocha</title><link>https://ricardorocha.io/tags/prometheus/</link><description>Recent content in prometheus on Ricardo Rocha</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 16 Dec 2020 12:00:00 +0000</lastBuildDate><atom:link href="https://ricardorocha.io/tags/prometheus/index.xml" rel="self" type="application/rss+xml"/><item><title>Generating Prometheus Metrics from Application Logs</title><link>https://ricardorocha.io/blog/prometheus-metrics-mtail/</link><pubDate>Wed, 16 Dec 2020 12:00:00 +0000</pubDate><guid>https://ricardorocha.io/blog/prometheus-metrics-mtail/</guid><description>While many applications and services already expose internal metrics in Prometheus format - especially the ones often deployed on Kubernetes - many others keep this information only inside log files and require extra tooling to parse and expose the data.
Recently i worked on a distributed setup with Kubernetes clusters running in multiple clouds, each with a Prometheus instance collecting local metrics which then get aggregated centrally. One of the use cases involves evaluating the performance of batch like workloads, which also tend to keep performance data in the logs for end user evaluation after the jobs are finished.</description></item><item><title>Generating Prometheus Metrics from Application Logs</title><link>https://ricardorocha.io/blog/ubuntu-setup/</link><pubDate>Wed, 16 Dec 2020 12:00:00 +0000</pubDate><guid>https://ricardorocha.io/blog/ubuntu-setup/</guid><description>While many applications and services already expose internal metrics in Prometheus format - especially the ones often deployed on Kubernetes - many others keep this information only inside log files and require extra tooling to parse and expose the data.
Recently i worked on a distributed setup with Kubernetes clusters running in multiple clouds, each with a Prometheus instance collecting local metrics which then get aggregated centrally. One of the use cases involves evaluating the performance of batch like workloads, which also tend to keep performance data in the logs for end user evaluation after the jobs are finished.</description></item><item><title>Analysing Prometheus Metrics in Pandas</title><link>https://ricardorocha.io/blog/prometheus-metrics-in-pandas/</link><pubDate>Fri, 13 Nov 2020 22:00:00 +0000</pubDate><guid>https://ricardorocha.io/blog/prometheus-metrics-in-pandas/</guid><description>I spend more and more time working with Prometheus as it&#39;s the default monitoring / metric collection system for Kubernetes clusters at work and other projects i have. It&#39;s also a great tool overall i wish i had for longer. Pair it with Grafana and it gives a well integrated monitoring solution: While a lot can be done with the timeseries data using PromQL and Grafana, i often miss Pandas to easily reorganize the data.</description></item></channel></rss>